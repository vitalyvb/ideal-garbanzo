---

- name: Install packages
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - nftables
    - firejail
    - tcpdump
    - bridge-utils
    - python3-pip
    - python3-scapy
    - auditd
    - audispd-plugins

- name: Create group
  group:
    name: csniff
    state: present


- name: Create group
  group:
    name: ctcpdump
    state: present


- name: Add users
  user:
    name: "{{ ctfusers_login_prefix }}{{ item.level }}"
    shell: /usr/bin/firejail
    password: "{{ item.password | password_hash('sha512', ctfusers_pw_salt) }}"
    groups: csniff,ctcpdump
  loop: "{{ ctflevels }}"

- name: Add sbin to user path
  copy:
    src: etc/profile.d/setpath.sh
    dest: /etc/profile.d/setpath.sh
    owner: root
    group: root
    mode: "0644"

- name: Prepare password directory
  file:
    path: "/etc/{{ ctfusers_login_prefix }}_pass"
    state: directory

- name: Prepare passwords
  template:
    src: "passwords.j2"
    dest: "/etc/{{ ctfusers_login_prefix }}_pass/{{ ctfusers_login_prefix }}{{ item.level }}"
    owner: root
    group: "{{ ctfusers_login_prefix }}{{ item.level }}"
    mode: "0440"
  loop: "{{ ctflevels }}"

- name: Disable MOTD
  copy:
    src: etc/motd
    dest: /etc/motd
    owner: root
    group: root
    mode: "0644"

- name: Disable MOTD
  file:
    path: /etc/update-motd.d/
    state: directory
    recurse: yes
    mode: "-x"


- name: Set group perms on tcpdump
  file:
    path: /usr/sbin/tcpdump
    owner: root
    group: ctcpdump
    mode: "0710"

- name: Set cap_net_raw=ep on tcpdump
  capabilities:
    path: /usr/sbin/tcpdump
    capability: cap_net_raw=ep
    state: present


- name: Copy nftables configuration
  copy:
    src: "etc/{{ item }}"
    dest: "/etc/{{ item }}"
    owner: root
    group: root
    mode: "0750"
  with_items:
    - "nftables.conf"
  register: nftables
  tags: nftables

- name: Reload nftables
  become: true
  service:
    name: nftables.service
    state: restarted
  when: nftables.changed
  tags: nftables


- name: Copy audit configuration
  copy:
    src: "etc/audit/rules.d/{{ item }}"
    dest: "/etc/audit/rules.d/{{ item }}"
    owner: root
    group: root
    mode: "0600"
  with_items:
    - "audit-exec.rules"
  register: auditch
  tags: audit

- name: Reload audit
  become: true
  service:
    name: auditd.service
    state: restarted
    enabled: yes
  when: auditch.changed
  tags: audit


- name: Copy firejail configuration
  copy:
    src: "etc/firejail/{{ item }}"
    dest: "/etc/firejail/{{ item }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - "firejail.config"
    - "ctf-sniff.profile"

- name: Copy firejail configuration
  template:
    src: "etc/firejail/{{ item }}.j2"
    dest: "/etc/firejail/{{ item }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - "login.users"


- name: Configure AppAarmor
  copy:
    src: "etc/apparmor.d/{{ item }}"
    dest: "/etc/apparmor.d/{{ item }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - "usr.sbin.tcpdump"
  register: apparmorcfg

- name: Restart AppArmor
  become: true
  service:
    name: apparmor
    state: restarted
  when: apparmorcfg.changed


- name: Configure network
  template:
    src: "etc/network/interfaces.d/{{ item }}.j2"
    dest: "/etc/network/interfaces.d/{{ item }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - "br"
  register: netcfg

- name: Restart networking
  become: true
  service:
    name: networking
    state: restarted
  when: netcfg.changed

- name: Configure sysctl
  copy:
    src: "etc/sysctl.d/{{ item }}"
    dest: "/etc/sysctl.d/{{ item }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - "less-ipv6.conf"
  register: sysctlcfg

- name: Reload sysctl
  become: true
  service:
    name: systemd-sysctl.service
    state: restarted
  when: sysctlcfg.changed


- name: Copy server code
  copy:
    src: "../traffic-servers/dist/{{ item }}"
    dest: "/tmp/{{ item }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - "{{ ctfpackage_name }}-{{ ctfpackage_version }}.tar.gz"
  register: srvcode
  tags: server

- name: Install server code
  become: true
  pip:
    name: "file:///tmp/{{ ctfpackage_name }}-{{ ctfpackage_version }}.tar.gz"
    executable: pip3
    state: forcereinstall
  when: srvcode.changed
  tags: server

- name: Install systemctl daemons
  template:
    src: "etc/systemd/system/level-service.j2"
    dest: "/etc/systemd/system/ctf{{ item.level }}.service"
    owner: root
    group: root
    mode: "0644"
  loop: "{{ ctflevels }}"
  when: not (item.last | default(false))
  register: systemdcodedaemons
  tags: server


- name: Reload systemd
  systemd:
    daemon_reload: yes
  when: systemdcodedaemons.changed
  tags: server


- name: Enable and start ctf services
  systemd:
    name: "ctf{{ item.level }}.service"
    state: restarted
    enabled: yes
  loop: "{{ ctflevels }}"
  when:
    - not (item.last | default(false))
    - systemdcodedaemons.changed or srvcode.changed
  tags: server

...
